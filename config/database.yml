# SQL Server (2005 or higher recommended)
#
# Install the adapters and driver
#   gem install tiny_tds
#   gem install activerecord-sqlserver-adapter
#
# Ensure the activerecord adapter and db driver gems are defined in your Gemfile
#   gem 'tiny_tds'
#   gem 'activerecord-sqlserver-adapter'
#
# You should make sure freetds is configured correctly first.
# freetds.conf contains host/port/protocol_versions settings.
# http://freetds.schemamania.org/userguide/freetdsconf.htm
#
# A typical Microsoft server
#   [mssql]
#   host = mssqlserver.yourdomain.com
#   port = 1433
#   tds version = 7.1

# If you can connect with "tsql -S servername", your basic FreeTDS installation is working.
# 'man tsql' for more info
# Set timeout to a larger number if valid queries against a live db fail
#
#default: &default
default: &default
  adapter: sqlserver
  encoding: utf8
  username: "jeremiah"
  password: "jasaag01"
  mode:     dblib
  dataserver: JESYONTOP-PC\MSSQLSERVER2014
  port: 1433
  # adapter: sqlserver
  # encoding: utf8
  # username: "managemyfunds"
  # password: "managemyfunds"
  # mode:     dblib
  # dataserver: 172.21.13.44
  # port: 1433
  #reconnect: true
  
  #timeout: 25
  #dataserver:  localhost\SQLEXPRESS #192.168.1.185:1433\SQL1

development:
  <<: *default
  database: VerifierApp

# Warning: The database defined as "test" will be erased and
# re-generated from your development database when you run "rake".
# Do not set this db to the same as development or production.
test:
  <<: *default
  database: VerifierApp_test

# As with config/secrets.yml, you never want to store sensitive information,
# like your database password, in your source code. If your source code is
# ever seen by anyone, they now have access to your database.
#
# Instead, provide the password as a unix environment variable when you boot
# the app. Read http://guides.rubyonrails.org/configuring.html#configuring-a-database
# for a full rundown on how to provide these environment variables in a
# production deployment.
#
# On Heroku and other platform providers, you may have a full connection URL
# available as an environment variable. For example:
#
#   DATABASE_URL="sqlserver://myuser:mypass@localhost/somedatabase"
#
# You can use this database configuration with:
#
#   production:
#     url: <%= ENV['DATABASE_URL'] %>
#
production:
  <<: *default
  database: verifier_production
  username: verifier
  password: <%= ENV['VERIFIER_DATABASE_PASSWORD'] %>
